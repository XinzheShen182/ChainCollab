{
    "import": "import (\n\t\"encoding/json\"\n\t\"errors\"\n\t\"fmt\"\n\t\"strings\"\n\n\t\"github.com/hyperledger/fabric-contract-api-go/contractapi\"\n)\n",
    "package": "package chaincode\n",
    "contract_definition": "type SmartContract struct {\n\tcontractapi.Contract\n}\n",
    "fix_part": "type ElementState int\n\nconst (\n\tDISABLED = iota\n\tENABLED\n\tWAITINGFORCONFIRM\n\tCOMPLETED\n)\n\ntype Message struct {\n\tMessageID     string       `json:\"messageID\"`\n\tSendMspID     string       `json:\"sendMspID\"`\n\tReceiveMspID  string       `json:\"receiveMspID\"`\n\tFireflyTranID string       `json:\"fireflyTranID\"`\n\tMsgState      ElementState `json:\"msgState\"`\n\tFormat        string       `json:\"format\"`\n}\n\ntype Gateway struct {\n\tGatewayID    string       `json:\"gatewayID\"`\n\tGatewayState ElementState `json:\"gatewayState\"`\n}\n\ntype ActionEvent struct {\n\tEventID    string       `json:\"eventID\"`\n\tEventState ElementState `json:\"eventState\"`\n}\n\nfunc (cc *SmartContract) CreateMessage(ctx contractapi.TransactionContextInterface, messageID string, sendMspID string, receiveMspID string, fireflyTranID string, msgState ElementState, format string) (*Message, error) {\n\tstub := ctx.GetStub()\n\n\t// \u68c0\u67e5\u662f\u5426\u5b58\u5728\u5177\u6709\u76f8\u540cID\u7684\u8bb0\u5f55\n\texistingData, err := stub.GetState(messageID)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"\u83b7\u53d6\u72b6\u6001\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t}\n\tif existingData != nil {\n\t\treturn nil, fmt.Errorf(\"\u6d88\u606f %s \u5df2\u5b58\u5728\", messageID)\n\t}\n\n\t// \u521b\u5efa\u6d88\u606f\u5bf9\u8c61\n\tmsg := &Message{\n\t\tMessageID:     messageID,\n\t\tSendMspID:     sendMspID,\n\t\tReceiveMspID:  receiveMspID,\n\t\tFireflyTranID: fireflyTranID,\n\t\tMsgState:      msgState,\n\t\tFormat:        format,\n\t}\n\n\t// \u5c06\u6d88\u606f\u5bf9\u8c61\u5e8f\u5217\u5316\u4e3aJSON\u5b57\u7b26\u4e32\u5e76\u4fdd\u5b58\u5728\u72b6\u6001\u6570\u636e\u5e93\u4e2d\n\tmsgJSON, err := json.Marshal(msg)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"\u5e8f\u5217\u5316\u6d88\u606f\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t}\n\terr = stub.PutState(messageID, msgJSON)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"\u4fdd\u5b58\u6d88\u606f\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t}\n\n\treturn msg, nil\n}\n\nfunc (cc *SmartContract) CreateGateway(ctx contractapi.TransactionContextInterface, gatewayID string, gatewayState ElementState) (*Gateway, error) {\n\tstub := ctx.GetStub()\n\n\t// \u68c0\u67e5\u662f\u5426\u5b58\u5728\u5177\u6709\u76f8\u540cID\u7684\u8bb0\u5f55\n\texistingData, err := stub.GetState(gatewayID)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"\u83b7\u53d6\u72b6\u6001\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t}\n\tif existingData != nil {\n\t\treturn nil, fmt.Errorf(\"\u7f51\u5173 %s \u5df2\u5b58\u5728\", gatewayID)\n\t}\n\n\t// \u521b\u5efa\u7f51\u5173\u5bf9\u8c61\n\tgtw := &Gateway{\n\t\tGatewayID:    gatewayID,\n\t\tGatewayState: gatewayState,\n\t}\n\n\t// \u5c06\u7f51\u5173\u5bf9\u8c61\u5e8f\u5217\u5316\u4e3aJSON\u5b57\u7b26\u4e32\u5e76\u4fdd\u5b58\u5728\u72b6\u6001\u6570\u636e\u5e93\u4e2d\n\tgtwJSON, err := json.Marshal(gtw)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"\u5e8f\u5217\u5316\u7f51\u5173\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t}\n\terr = stub.PutState(gatewayID, gtwJSON)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"\u4fdd\u5b58\u7f51\u5173\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t}\n\n\treturn gtw, nil\n}\n\nfunc (cc *SmartContract) CreateActionEvent(ctx contractapi.TransactionContextInterface, eventID string, eventState ElementState) (*ActionEvent, error) {\n\tstub := ctx.GetStub()\n\n\t// \u521b\u5efaActionEvent\u5bf9\u8c61\n\tactionEvent := &ActionEvent{\n\t\tEventID:    eventID,\n\t\tEventState: eventState,\n\t}\n\n\t// \u5c06ActionEvent\u5bf9\u8c61\u5e8f\u5217\u5316\u4e3aJSON\u5b57\u7b26\u4e32\u5e76\u4fdd\u5b58\u5728\u72b6\u6001\u6570\u636e\u5e93\u4e2d\n\tactionEventJSON, err := json.Marshal(actionEvent)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"\u5e8f\u5217\u5316\u4e8b\u4ef6\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t}\n\terr = stub.PutState(eventID, actionEventJSON)\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"\u4fdd\u5b58\u4e8b\u4ef6\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t}\n\n\treturn actionEvent, nil\n}\n\n// Read function\nfunc (c *SmartContract) ReadMsg(ctx contractapi.TransactionContextInterface, messageID string) (*Message, error) {\n\tmsgJSON, err := ctx.GetStub().GetState(messageID)\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn nil, err\n\t}\n\n\tif msgJSON == nil {\n\t\terrorMessage := fmt.Sprintf(\"Message %s does not exist\", messageID)\n\t\tfmt.Println(errorMessage)\n\t\treturn nil, errors.New(errorMessage)\n\t}\n\n\tvar msg Message\n\terr = json.Unmarshal(msgJSON, &msg)\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn nil, err\n\t}\n\n\treturn &msg, nil\n}\n\nfunc (c *SmartContract) ReadGtw(ctx contractapi.TransactionContextInterface, gatewayID string) (*Gateway, error) {\n\tgtwJSON, err := ctx.GetStub().GetState(gatewayID)\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn nil, err\n\t}\n\n\tif gtwJSON == nil {\n\t\terrorMessage := fmt.Sprintf(\"Gateway %s does not exist\", gatewayID)\n\t\tfmt.Println(errorMessage)\n\t\treturn nil, errors.New(errorMessage)\n\t}\n\n\tvar gtw Gateway\n\terr = json.Unmarshal(gtwJSON, &gtw)\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn nil, err\n\t}\n\n\treturn &gtw, nil\n}\n\nfunc (c *SmartContract) ReadEvent(ctx contractapi.TransactionContextInterface, eventID string) (*ActionEvent, error) {\n\teventJSON, err := ctx.GetStub().GetState(eventID)\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn nil, err\n\t}\n\n\tif eventJSON == nil {\n\t\terrorMessage := fmt.Sprintf(\"Event state %s does not exist\", eventID)\n\t\tfmt.Println(errorMessage)\n\t\treturn nil, errors.New(errorMessage)\n\t}\n\n\tvar event ActionEvent\n\terr = json.Unmarshal(eventJSON, &event)\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn nil, err\n\t}\n\n\treturn &event, nil\n}\n\n// Change State  function\nfunc (c *SmartContract) ChangeMsgState(ctx contractapi.TransactionContextInterface, messageID string, msgState ElementState) error {\n\tstub := ctx.GetStub()\n\n\tmsg, err := c.ReadMsg(ctx, messageID)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tmsg.MsgState = msgState\n\n\tmsgJSON, err := json.Marshal(msg)\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn err\n\t}\n\n\terr = stub.PutState(messageID, msgJSON)\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\nfunc (c *SmartContract) ChangeGtwState(ctx contractapi.TransactionContextInterface, gatewayID string, gtwState ElementState) error {\n\tstub := ctx.GetStub()\n\n\tgtw, err := c.ReadGtw(ctx, gatewayID)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tgtw.GatewayState = gtwState\n\n\tgtwJSON, err := json.Marshal(gtw)\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn err\n\t}\n\n\terr = stub.PutState(gatewayID, gtwJSON)\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\nfunc (c *SmartContract) ChangeEventState(ctx contractapi.TransactionContextInterface, eventID string, eventState ElementState) error {\n\tstub := ctx.GetStub()\n\n\tactionEvent, err := c.ReadEvent(ctx, eventID)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tactionEvent.EventState = eventState\n\n\tactionEventJSON, err := json.Marshal(actionEvent)\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn err\n\t}\n\n\terr = stub.PutState(eventID, actionEventJSON)\n\tif err != nil {\n\t\tfmt.Println(err.Error())\n\t\treturn err\n\t}\n\n\treturn nil\n}\n\n//get all message\n\nfunc (cc *SmartContract) GetAllMessages(ctx contractapi.TransactionContextInterface) ([]*Message, error) {\n\tresultsIterator, err := ctx.GetStub().GetStateByRange(\"\", \"\")\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"\u83b7\u53d6\u72b6\u6001\u6570\u636e\u65f6\u51fa\u9519: %v\", err) //\u76f4\u63a5err\u4e5f\u884c\n\t}\n\tdefer resultsIterator.Close()\n\n\tvar messages []*Message\n\tfor resultsIterator.HasNext() {\n\t\tqueryResponse, err := resultsIterator.Next()\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"\u8fed\u4ee3\u72b6\u6001\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t\t}\n\n\t\tvar message Message\n\t\terr = json.Unmarshal(queryResponse.Value, &message)\n\t\tif strings.HasPrefix(message.MessageID, \"Message\") {\n\t\t\tif err != nil {\n\t\t\t\treturn nil, fmt.Errorf(\"\u53cd\u5e8f\u5217\u5316\u6d88\u606f\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t\t\t}\n\n\t\t\tmessages = append(messages, &message)\n\t\t}\n\t}\n\n\treturn messages, nil\n}\n\nfunc (cc *SmartContract) GetAllGateways(ctx contractapi.TransactionContextInterface) ([]*Gateway, error) {\n\tresultsIterator, err := ctx.GetStub().GetStateByRange(\"\", \"\")\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"\u83b7\u53d6\u72b6\u6001\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t}\n\tdefer resultsIterator.Close()\n\n\tvar gateways []*Gateway\n\tfor resultsIterator.HasNext() {\n\t\tqueryResponse, err := resultsIterator.Next()\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"\u8fed\u4ee3\u72b6\u6001\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t\t}\n\n\t\tvar gateway Gateway\n\t\terr = json.Unmarshal(queryResponse.Value, &gateway)\n\t\tif strings.HasPrefix(gateway.GatewayID, \"ExclusiveGateway\") ||\n\t\t\tstrings.HasPrefix(gateway.GatewayID, \"EventBasedGateway\") ||\n\t\t\tstrings.HasPrefix(gateway.GatewayID, \"Gateway\") ||\n\t\t\tstrings.HasPrefix(gateway.GatewayID, \"ParallelGateway\") {\n\t\t\tif err != nil {\n\t\t\t\treturn nil, fmt.Errorf(\"\u53cd\u5e8f\u5217\u5316\u7f51\u5173\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t\t\t}\n\n\t\t\tgateways = append(gateways, &gateway)\n\t\t}\n\t}\n\n\treturn gateways, nil\n}\n\nfunc (cc *SmartContract) GetAllActionEvents(ctx contractapi.TransactionContextInterface) ([]*ActionEvent, error) {\n\tresultsIterator, err := ctx.GetStub().GetStateByRange(\"\", \"\")\n\tif err != nil {\n\t\treturn nil, fmt.Errorf(\"\u83b7\u53d6\u72b6\u6001\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t}\n\tdefer resultsIterator.Close()\n\n\tvar events []*ActionEvent\n\tfor resultsIterator.HasNext() {\n\t\tqueryResponse, err := resultsIterator.Next()\n\t\tif err != nil {\n\t\t\treturn nil, fmt.Errorf(\"\u8fed\u4ee3\u72b6\u6001\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t\t}\n\n\t\tvar event ActionEvent\n\t\terr = json.Unmarshal(queryResponse.Value, &event)\n\t\tif strings.HasPrefix(event.EventID, \"StartEvent\") ||\n\t\t\tstrings.HasPrefix(event.EventID, \"Event\") ||\n\t\t\tstrings.HasPrefix(event.EventID, \"EndEvent\") {\n\t\t\tif err != nil {\n\t\t\t\treturn nil, fmt.Errorf(\"\u53cd\u5e8f\u5217\u5316\u4e8b\u4ef6\u6570\u636e\u65f6\u51fa\u9519: %v\", err)\n\t\t\t}\n\n\t\t\tevents = append(events, &event)\n\t\t}\n\t}\n\n\treturn events, nil\n}\n",
    "InitFuncFrame": "func (cc *SmartContract) InitLedger(ctx contractapi.TransactionContextInterface) error {{\n\tstub := ctx.GetStub()\n\n\t// isInited in state\n\tisInitedBytes, err := stub.GetState(\"isInited\")\n\tif err != nil {{\n\t\treturn fmt.Errorf(\"Failed to get isInited: %v\", err)\n\t}}\n\tif isInitedBytes != nil {{\n\t\terrorMessage := \"Chaincode has already been initialized\"\n\t\tfmt.Println(errorMessage)\n\t\treturn fmt.Errorf(errorMessage)\n\t}}\n\n{}\n\tstub.PutState(\"isInited\", []byte(\"true\"))\n\n\tstub.SetEvent(\"initContractEvent\", []byte(\"Contract has been initialized successfully\"))\n\treturn nil\n}}\n",
    "InitStart": "\tcc.CreateActionEvent(ctx, \"{}\", ENABLED)\n",
    "InitEnd": "\tcc.CreateActionEvent(ctx, \"{}\", DISABLED)\n",
    "InitMessage": "\tcc.CreateMessage(ctx, \"{}\", \"{}\", \"{}\", \"\", DISABLED, \"{}\")\n",
    "InitGateway": "\tcc.CreateGateway(ctx, \"{}\", DISABLED)\n"
    
}