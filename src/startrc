export WorkDir=$(pwd)
alias clean='cd $WorkDir &&sudo ./clean.sh'


if [ -z "local" ]; then
    alias start_front='cd $WorkDir/front && npm run dev-local'
    alias start_agent='cd $WorkDir/agent/docker-rest-agent && source venv/bin/activate && gunicorn server:app -c ./gunicorn.conf.py:config_local_dev'
    alias start_trans='cd $WorkDir/py_translator && source venv/bin/activate && uvicorn server:app --reload -c ./config.py:config_local_dev'
fi

if [ -z "server" ]; then
    alias start_front='cd $WorkDir/front && npm run dev-server'
    alias start_agent='cd $WorkDir/agent/docker-rest-agent && source venv/bin/activate && gunicorn server:app -c ./gunicorn.conf.py:config_lab_server'
    alias start_trans='cd $WorkDir/py_translator && source venv/bin/activate && uvicorn server:app --reload -c ./config.py:config_lab_server'
fi

# COMMON PART


alias start_database='cd $WorkDir/backend && docker-compose up -d'
alias prepare_api='cd $WorkDir/backend && source venv/bin/activate && python3 manage.py makemigrations && python3 manage.py migrate'
alias start_api='cd $WorkDir/backend && source venv/bin/activate && python manage.py runserver 0.0.0.0:8000'

alias start_oldtrans='cd ~/translator-springboot && mvn spring-boot:run'

alias start_chor='cd $WorkDir/chor_js_modify && npm run dev'


alias export_ER='cd $WorkDir/backend && source venv/bin/activate && python3.10 manage.py graph_models -a -g -o er.png'
alias export_ER_Dot='cd $WorkDir/backend && source venv/bin/activate && python3.10 manage.py graph_models -a -o er.dot'



# start_database then wait for 3 seconds


add_host_mapping() {
    if [ $# -eq 0 ]; then
        echo "请提供插件名称作为参数"
        return 1
    fi

    for plugin in "$@"; do
        echo "127.0.0.1 $plugin" | sudo tee -a /etc/hosts >/dev/null
        echo "已将 $plugin 添加到hosts文件"
    done
}
